{"version":3,"file":"static/js/997.654fc587.chunk.js","mappings":"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","sources":["components/forAttendency/AttendencyRoll.tsx"],"sourcesContent":["import { styled } from \"@stitches/react\"\nimport React, { useEffect, useState } from \"react\"\nimport { useStateContext } from \"../../contextApi/StateProvider\"\nimport { A_Status } from \"../../dexybase/attendency\"\nimport { useAppDispatch, useAppSelector } from \"../../redux/hooks\"\nimport { attendencyHandler } from \"../../redux/reducers/attendencySlice\"\nimport { liftArray, liftHandler } from \"../../redux/reducers/lifter\"\nimport { confirmHandler } from \"../../redux/reducers/sampleSlice\"\nimport { AppDispatch } from \"../../redux/store\"\nimport { AButton, DexyButtonWrap } from \"./AttendecyNodes\"\n\nconst AttendencyRoll = (props: { targetClass: Schedule; youRemain: (student: AStudent) => void }) => {\n  const { targetClass, youRemain } = props\n  const { attendency } = useAppSelector((state) => state)\n\n  const [studentList, setStudentList] = useState<AStudent[]>([])\n\n  useEffect(() => {\n    let copy: AStudent[] = []\n    attendency.studentList &&\n      attendency.studentList.map((student) => {\n        return student.class === targetClass.class ? (copy = [...copy, student]) : copy\n      })\n\n    setStudentList(copy)\n  }, [attendency.studentList])\n\n  const [multiStatus, setMultiStatus] = useState<AStatus>(\"\")\n\n  const dispatch = useAppDispatch()\n\n  const donotApplyList: AStatus[] = [\"결석\", \"조퇴\", \"남음\", \"아픔\", \"걍쉼\", \"귀가\"]\n\n  const onClick = (status: AStatus) => {\n    setMultiStatus(status)\n    let targetClass: AStudent[] = []\n    studentList &&\n      studentList.map((student) => {\n        const check = donotApplyList.find((status) => status === student.status)\n        check && student.status === \"남음\" && youRemain(student)\n        if (check) {\n          return (targetClass = [...targetClass, student])\n        } else return !check ? (targetClass = [...targetClass, student]) : targetClass\n      })\n    dispatch(liftHandler({ targetClass, status }))\n    dispatch(confirmHandler({ state: true, message: `학생들을 일괄처리 하시겠습니까?`, okBtn: \"처리\", cancelBtn: \"취소\", type: \"attendencyHandler\" }))\n  }\n\n  useEffect(() => {\n    studentList && studentList.map((student) => (student.status === \"남음\" ? youRemain(student) : null))\n  }, [studentList])\n\n  return (\n    <div style={{ border: \"1px solid\", textAlign: \"center\", paddingBottom: 5 }}>\n      <MultiButtons>\n        {A_Status &&\n          A_Status.map((button) => (\n            <AButton border={multiStatus === button ? false : true} key={button} onClick={() => onClick(button)} margin=\"0 5px\">\n              일괄 {button}\n            </AButton>\n          ))}\n      </MultiButtons>\n      {studentList &&\n        studentList.map((student) => (\n          <EachStudent dispatch={dispatch} donotApplyList={donotApplyList} key={student.name || student.phone[2]} student={student} multiStatus={multiStatus} />\n        ))}\n    </div>\n  )\n}\n\nconst MultiButtons = styled(\"div\", {\n  width: \"100%\",\n  height: 50,\n  marginTop: 10,\n  marginBottom: 5,\n  display: \"flex\",\n  justifyContent: \"center\",\n})\nexport default AttendencyRoll\n\nconst EachStudent = (props: { student: AStudent; multiStatus: AStatus; dispatch: AppDispatch; donotApplyList: AStatus[] }) => {\n  const { student, multiStatus, dispatch, donotApplyList } = props\n  const { screen } = useStateContext()\n\n  const Wrap = styled(\"div\", {\n    display: \"flex\",\n    flexFlow: screen.width > 767 ? \"row\" : \"column\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: \"0 10px\",\n  })\n\n  useEffect(() => {\n    const check = donotApplyList.find((status) => status === student.status)\n    if (check) {\n      setSingleStatus(\"\")\n    } else {\n      if (multiStatus.length > 0) {\n        setSingleStatus(multiStatus)\n      }\n    }\n  }, [multiStatus, student])\n\n  const [singleStatus, setSingleStatus] = useState<AStatus>(\"\")\n\n  const [isApplyReady, setIsApplyReady] = useState(false)\n\n  const onClick = (student: AStudent, status: AStatus) => {\n    console.log(student, status)\n    if (student.status === status) {\n      setSingleStatus(\"\")\n      setIsApplyReady(false)\n    } else {\n      setSingleStatus(status)\n      setIsApplyReady(true)\n    }\n  }\n\n  const onApply = () => {\n    dispatch(attendencyHandler({ type: \"teacher\", student, status: singleStatus }))\n  }\n\n  const onCancel = () => {\n    setSingleStatus(\"\")\n    setIsApplyReady(false)\n  }\n\n  return (\n    <Wrap key={student.name || student.phone[2]}>\n      <span style={{ width: 200, display: \"flex\", alignItems: \"center\", justifyContent: \"center\", border: \"1px solid\", height: 50, borderRadius: 3 }}>\n        {student.name}: {student.status}\n      </span>\n      <DexyButtonWrap justifyContent=\"center\" padding={5}>\n        {A_Status &&\n          A_Status.map((button) => <ESButton key={button} onClick={onClick} student={student} singleStatus={singleStatus} button={button} screen={screen} />)}\n        {isApplyReady && (\n          <>\n            <AButton onClick={onApply} margin=\"0 5px\" fontSize={screen.width > 767 ? 20 : 12}>\n              적용\n            </AButton>\n            <AButton onClick={onCancel} fontSize={screen.width > 767 ? 20 : 12} margin=\"0 5px\" border={true}>\n              취소\n            </AButton>\n          </>\n        )}\n      </DexyButtonWrap>\n    </Wrap>\n  )\n}\n\nconst ESButton = (props: { button: AStatus; student: AStudent; onClick: (student: AStudent, status: AStatus) => void; singleStatus: AStatus; screen: any }) => {\n  const { student, button, onClick, singleStatus, screen } = props\n\n  const [border, setBorder] = useState(true)\n\n  useEffect(() => {\n    if (student.status === button) {\n      setBorder(false)\n    } else if (singleStatus === button) {\n      setBorder(false)\n    } else setBorder(true)\n  }, [student, singleStatus, button])\n  return (\n    <AButton border={border} key={button} onClick={() => onClick(student, button)} margin=\"0 5px\" fontSize={screen.width > 767 ? 20 : 12}>\n      {button}\n    </AButton>\n  )\n}\n"],"names":["MultiButtons","styled","width","height","marginTop","marginBottom","display","justifyContent","props","targetClass","youRemain","attendency","useAppSelector","state","useState","studentList","setStudentList","useEffect","copy","map","student","class","multiStatus","setMultiStatus","dispatch","useAppDispatch","donotApplyList","status","style","border","textAlign","paddingBottom","A_Status","button","onClick","check","find","liftHandler","confirmHandler","message","okBtn","cancelBtn","type","margin","EachStudent","name","phone","screen","useStateContext","Wrap","flexFlow","alignItems","padding","setSingleStatus","length","singleStatus","isApplyReady","setIsApplyReady","console","log","borderRadius","ESButton","attendencyHandler","fontSize","setBorder"],"sourceRoot":""}