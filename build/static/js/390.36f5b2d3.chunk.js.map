{"version":3,"file":"static/js/390.36f5b2d3.chunk.js","mappings":"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","sources":["components/forAttendency/AdminTT.tsx"],"sourcesContent":["import { styled } from \"@stitches/react\"\nimport React, { useEffect, useState } from \"react\"\nimport { useAppDispatch } from \"../../redux/hooks\"\nimport { AButton, ASelect, DexyButtonWrap } from \"./AttendecyNodes\"\nimport { AiOutlineEdit, AiOutlineCheckCircle } from \"react-icons/ai\"\nimport { RiDeleteBack2Line } from \"react-icons/ri\"\nimport { classList, timeList } from \"../../dexybase/attendency\"\n\nconst AdminTT = (props: { timetable: TimeTable[]; color: string }) => {\n  const { timetable, color } = props\n\n  const [options, setOptions] = useState<Days[]>([])\n\n  const [day, setDay] = useState<Days>(\"\")\n\n  useEffect(() => {\n    let option: Days[] = []\n    timetable &&\n      timetable.map((item) => {\n        option = [...option, item.day]\n      })\n    setOptions(option)\n  }, [timetable])\n\n  const dispatch = useAppDispatch()\n  const onClick = (day: Days) => setDay(day)\n  return (\n    <>\n      <DexyButtonWrap>\n        {options &&\n          options.map((option) => (\n            <AButton key={option} onClick={() => onClick(option)} border={option === day ? false : true} width=\"100%\" margin={5}>\n              {option}\n            </AButton>\n          ))}\n      </DexyButtonWrap>\n      <DexyButtonWrap flexDirection=\"column\" margin={5}>\n        {timetable && timetable.map((item) => (item.day === day ? <Schedules schedule={item.schedule} key={item.day} color={color} /> : null))}\n      </DexyButtonWrap>\n    </>\n  )\n}\n\nexport default AdminTT\n\nconst Schedules = (props: { schedule: Schedule[]; color: string }) => {\n  const [schedule, setSchedule] = useState<Schedule[]>([])\n\n  useEffect(() => {\n    setSchedule(props.schedule)\n  }, [props.schedule])\n\n  return (\n    <>\n      {schedule && schedule.map((item) => <ScheduleItem key={item.time} item={item} color={props.color} />)}\n      <button>추가</button>\n    </>\n  )\n}\n\nconst ScheduleItem = (props: { item: Schedule; color: string }) => {\n  const { item, color } = props\n  const [input, setInput] = useState<Schedule>({ time: \"\", class: \"\" })\n\n  useEffect(() => {\n    setInput({ time: item.time, class: item.class })\n  }, [item])\n\n  const onChange = (e: any) => {\n    const { value, name } = e.target\n    setInput({ ...input, [name]: value })\n  }\n\n  const [isEditting, setIsEditting] = useState(false)\n\n  const onEdit = () => {\n    setIsEditting((prev) => !prev)\n    isEditting && console.log(\"editting done\")\n  }\n\n  const Button = styled(\"button\", {\n    color,\n  })\n\n  const InputWrap = styled(\"div\", {\n    display: \"flex\",\n    alignItems: \"center\",\n  })\n\n  const Input = styled(\"input\", {\n    border: \"none\",\n    color,\n    borderBottom: \"1px solid\",\n    \"&:focus\": {\n      outline: \"none\",\n    },\n    height: 45,\n    backgroundColor: \"transparent\",\n    marginBottom: 3,\n    fontSize: 16,\n    flex: 1,\n    marginRight: 10,\n    width: \"100%\",\n    textAlign: \"center\",\n  })\n\n  const ButtonWrap = styled(\"div\", {\n    display: \"flex\",\n    alignItems: \"center\",\n  })\n\n  return (\n    <Item>\n      <InputWrap>\n        {isEditting ? (\n          <>\n            <ASelect options={timeList} name=\"time\" onChange={onChange} placeHolder=\"시간을 선택해주세요.\" value={input.time} />\n            <ASelect placeHolder=\"반을 선택해주세요.\" options={classList} value={input.class} onChange={onChange} name=\"class\" />\n          </>\n        ) : (\n          <>\n            <span>{item.time}</span>\n            <span>{item.class}</span>\n          </>\n        )}\n      </InputWrap>\n      <ButtonWrap>\n        <Button style={{ marginRight: 10 }} onClick={onEdit}>\n          {isEditting ? <AiOutlineCheckCircle size={20} /> : <AiOutlineEdit size={20} />}\n        </Button>\n        <Button>\n          <RiDeleteBack2Line size={20} />\n        </Button>\n      </ButtonWrap>\n    </Item>\n  )\n}\nconst Item = styled(\"div\", {\n  display: \"flex\",\n  border: \"1px solid\",\n  width: \"calc(100% - 30px)\",\n  borderRadius: 3,\n  height: 30,\n  justifyContent: \"space-between\",\n  alignItems: \"center\",\n  padding: 10,\n  marginBottom: 10,\n})\n"],"names":["props","timetable","color","useState","options","setOptions","day","setDay","useEffect","option","map","item","useAppDispatch","onClick","border","width","margin","flexDirection","Schedules","schedule","setSchedule","ScheduleItem","time","class","input","setInput","onChange","e","target","value","name","isEditting","setIsEditting","Button","styled","InputWrap","display","alignItems","ButtonWrap","borderBottom","outline","height","backgroundColor","marginBottom","fontSize","flex","marginRight","textAlign","Item","timeList","placeHolder","classList","style","prev","console","log","size","borderRadius","justifyContent","padding"],"sourceRoot":""}